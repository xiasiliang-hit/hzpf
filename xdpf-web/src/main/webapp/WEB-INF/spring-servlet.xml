<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->

    <context:component-scan base-package="com.line.bqxd.platform.controller" />
    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->
    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
    <bean
            class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter" /> <!-- JSON转换器 -->
            </list>
        </property>
    </bean>
    <!-- 定义跳转的文件的前后缀 ，视图模式配置-->
    <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
    <!--bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/web/" />
        <property name="suffix" value=".jsp" />
    </bean -->

    <!--bean id="velocityViewResolver" class = "org.springframework.web.servlet.view.velocity.VelocityViewResolver">
        <property name="order" value="0" />
        <property name="contentType" value="text/html;charset=UTF-8" />
        <property name="requestContextAttribute" value="req"/>
        <property name="suffix" value=".vm" />

        <property name="toolboxConfigLocation" value="/WEB-INF/velocity/toolbox.xml"/>
        <property name="viewClass"
                  value="com.line.bqxd.platform.velocity.CustomVelocityToolboxView" />
    </bean -->

    <bean id="viewResolver" class="org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver">
        <!--property name="prefix" value="/screen/"/-->
        <property name="layoutUrl" value="layout/default.vm"/>
        <property name="exposeSpringMacroHelpers" value="true"/>
        <property name="order" value="0" />
        <property name="contentType" value="text/html;charset=UTF-8" />
        <property name="requestContextAttribute" value="req"/>
        <property name="suffix" value=".vm" />
        <property name="toolboxConfigLocation" value="/WEB-INF/velocity/toolbox.xml"/>
        <property name="viewClass" value="com.line.bqxd.platform.velocity.CustomVelocityToolboxView" />
    </bean>

    <bean id="velocityConfig" class = "org.springframework.web.servlet.view.velocity.VelocityConfigurer">
        <!--property name="configLocation" value="/WEB-INF/velocity.properties"/ -->
        <property name="resourceLoaderPath" value="/web/" />
        <property name="velocityPropertiesMap">
            <map>
                <entry key="input.encoding" value="UTF-8"></entry>
                <entry key="output.encoding" value="UTF-8"></entry>
                <entry key="directive.set.null.allowed" value="true"></entry>
                <entry key="velocimacro.library.autoreload" value="false"></entry>
                <entry key="velocimacro.context.localscope" value="true"></entry>
                <entry key="file.resource.loader.cache" value="true"></entry>  <!--打开cache开关-->
                <entry key="file.resource.loader.modificationCheckInterval" value="${velocity.modification.check.interval}"></entry> <!--load的间隔时间：其实若无动态修改的需求, 此处可改为-1，即只在启动时load一次, 此后不再load-->
                <entry key="resource.manager.defaultcache.size" value="0"></entry>  <!-- 0表示不限制cache大小-->
                <entry key="log4j.logger.org.apache.velocity" value="ERROR"></entry>
                <entry key="velocimacro.library" value="macro/web_global.vm"></entry>

            </map>
        <!--props>
            <prop key="input.encoding">UTF-8</prop>
            <prop key="output.encoding">UTF-8</prop>
            <prop key="directive.set.null.allowed">true</prop>
            <prop key="velocimacro.library.autoreload">false</prop>  //可不配置, 默认即为false
            <prop key="velocimacro.context.localscope">true</prop>
            <prop key="file.resource.loader.cache">true</prop>         //打开cache开关
            <prop key="file.resource.loader.modificationCheckInterval">60</prop>    //load的间隔时间：其实若无动态修改的需求, 此处可改为-1，即只在启动时load一次, 此后不再load
            <prop key="resource.manager.defaultcache.size">0</prop>      //resource.manager.defaultcache.size=0表示不限制cache大小
            <prop key="velocimacro.library">macro/cps_web_combo.vm,macro/cps_web_global.vm,macro/cps_gs.vm</prop>
        </props-->
        </property>
    </bean>


    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <!--bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">


        <property name="defaultEncoding" value="utf-8" />

        <property name="maxUploadSize" value="10485760000" />

        <property name="maxInMemorySize" value="40960" />
    </bean -->
    <bean id="exceptionHandler" class="com.line.bqxd.platform.manager.CustomExceptionHandler"/>
    <import resource="classpath:sqlmap/jndi.xml" />
    <import resource="classpath:conf/biz-manager.xml" />
    <import resource="classpath:conf/biz-pf-manager.xml" />
</beans>